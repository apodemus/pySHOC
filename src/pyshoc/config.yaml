# ---------------------------------------------------------------------------- #
# Configuration file for pyshoc
# {version}
# ---------------------------------------------------------------------------- #

# ---------------------------------------------------------------------------- #
# Console output styling

console:
    # style preferences
    preferences:
        # prefer SI based naming convention for telescopes eg: "1.9m" over "74in"
        metric_names:           True
        empty_filter_string:    ‚àÖ

    # welcome banner
    banner:
        show:       True
        format: |
            {{python:|B,darkgreen}: <{width}}
            {{now:|B,darkgreen}: <{width}}
            {logo}

            {{subtitle:|B,purple}: >{width}}
            {v{version}: >{width}|Bc}
        subtitle:   Photometry Pipeline
        fg:         [bold, blue]
        linestyle:  ['-', bold]
        linecolor:  teal
        width:      Null

    # progress bar styling
    progress:
        bar_format: >-
            {{desc}: {percentage:3.0f}%{bar}{n_fmt}/{total_fmt}:|green}
            {rate_fmt:|gold}
            {elapsed:|cyan} eta {remaining:|cyan}
        ascii: " ‚ï∏‚îÅ"
        # unit:  " frames"

    # Obstype colors
    colors:
        flat: cornflowerblue
        dark: tan

    # Table styling
    tables:
        campaign:
            row_nrs: 1
            summary: True
            title_style:
                fg: [bold, underline]
                bg: 'darkslategrey'
            too_wide: False

        # Grouped observations
        obs_groups:
            title_style:
                fg: [teal, underline, bold]
                # bg: 'darkslategrey'
            title_align: '<'

        # data product tables
        products:
            title_style:
                bg:     darkgreen
                fg:     [lightgrey, B, _]
            header_style:
                bg:     lightgreen
                fg:     [darkslategrey, B]


# ---------------------------------------------------------------------------- #
# Logging

logging:
    filename:         $INFO/logs/main.log
    # file sink
    file:
        level:      debug
        rotation:   2Mb
        retention:  1 month
        format:  >-  # {time:YYYY-MM-DD HH:mm:ss zz}
            {time:HH:mm:ss!UTC}|
            {name}.{function}:{line:d}|
            {level.name}: {message}

    # Console logging sink
    console:
        level:  info
        catch:  False
        # log message format
        format: >- # -  chomping indicator strips end newlines
            {elapsed:s|Bb}|
            {{{name}.{function}:s|green}:{line:d|orange}: <52}{level.icon}
            {{message}:|{style}}
        # sectioning format
        section: |

            {0:‚îÅ<{width}}
            {level.icon} {message:|B,teal}
            {0:‚îÅ<{width}}
        # repeated log message
        repeats: |
            { ‚§∑ [Previous {n_messages} {n_repeats} in {t}]:|kB}

        # level icons
        icons:
            section:    üåë
            success:    üöÄ
            info:       üåå
            debug:      üîß
            warning:    üö®
            error:      üî•
            critical:   üí•

    # library activation
    activation:
        pyshoc:                         1
        pyshoc.headers.convert:         0
        obstools:                       1
        mpl_multitab:                   1
        recipes:                        1
        recipes.io.utils:               0
        recipes.decorators.base:        0
        recipes.oo.temp:                0
        motley.formatter:               0
        motley.table.xlsx:              1
        scrawl.moves.machinery:         0


# ---------------------------------------------------------------------------- #
# Folder structure for pipeline results.

# Folder locations can be templated by using $ references in paths eg: $SECTION/
# substitutes the value of "folder" keyword under "section" header.
# Additionally, $HDU can be used for substitution the base name of the fits file
# eg: "20210410.0030", and $DATE for nightly results folder eg. "2021-04-10"

folders:
    output:     .pyshoc # root folder name default (if not provided by user at cli)
    cache:      .cache  # cache location (relative to output)

# The remaining folder structures is defined per section below.
# These are the default locations relative to the output folder above:
#     section        name                            reference
#     ------------------------------------------------------------------------
#     info           info/                           $INFO
#     logs           info/logs
#     registry       registry/                       $REGISTRY
#     phot           phot/                           $PHOT
#     tracking       phot/tracking/$HDU              $TRACKING/$HDU
#     lightcurves    phot/lightcurves/by_file/$HDU   $LIGHTCURVES/by_file/$HDU


# ---------------------------------------------------------------------------- #
# Remote file sync

remote:
    username:           Null
    server:             astro.cape.saao.ac.za
    filenames:
        rsync_script:           $INFO/rsync-remote.sh
        rsync_files:            $INFO/remote-files.txt


# ---------------------------------------------------------------------------- #
# Information / Overview Data Products

info:
    folder:         info/
    filenames:
        # pipeline summary info
        headers:        headers/$HDU.txt
        obslog:         observing-log.tex
        summary:        nightly-log.tex

    spreadsheets:
        filenames:
            # These can be separate files if you wish
            campaign:       info.xlsx::Campaign Info
            overview:       info.xlsx::Overview Products
            by_file:        info.xlsx::Data Products by File
            by_date:        info.xlsx::Data Products by Date

        style:
            data:
                font:
                    name:       Ubuntu Mono
                    size:       10

            title:
                font:
                    size:           14
                    bold:           True
                alignment:
                    horizontal:     center
                    vertical:       center
                    wrap_text:      True
                border:
                    bottom:         double

            headers:
                font:
                    size:           12
                    bold:           True
                alignment:
                    horizontal:     center
                    vertical:       center
                    wrap_text:      True
                # border:
                #     bottom:         double

            groups:
                border:
                    right:          double

            units:
                # font:
                alignment:
                    horizontal:     center
                    vertical:       top
                border:
                    bottom:         double

            totals:
                font:
                    bold:   True
                border:
                    bottom: thin
                    top:    thin

            bottomrule :    double


# ---------------------------------------------------------------------------- #
# Calibration Database

calibration:
    # Location of calibration database
    # ~/.config/pyshoc/caldb
    folder:     null

    # darks:
    #     filename_format: {obstype}-{camera}-{binning}-{readout}
    #     combine:         median

    # flats:
    #     filename_format: {obstype}-{t.date:d}-{telescope}-{camera}-{binning}-{filters}


# ---------------------------------------------------------------------------- #
# Plotting

plotting:
    # global plotting config. Specific plots are configurable per section below

    # GUI
    gui:
        active:     True
        delay:      False
        title:      pyshoc Photometry Pipeline GUI
        pos :       N

    # matplotlib rc params
    cmap:               cmr.voltage
    font:
        size:           14
    axes:
        labelweight:    bold


# aliases
# plots: *plotting
# plotting: *plotting


# ---------------------------------------------------------------------------- #
# Sample Image Prieview

samples:
    show:               True
    tab:                Sample Images    # Detection
    header:             Sample Images
    folder:             $REGISTRY/samples/
    filename:           $HDU$FRAMES.png

    params:
        stat:               median
        min_depth:          10          # minimun simulated integration time (seconds)
        n_intervals:        1
        subset:             Null        # eg: 1000 for sample from first 1000

    plots:
        # detections
        contours:
            cmap:   cmr.pride
            lw:     1.5

        labels:
            offset: [4, 4]
            size:   10
            color:  w
            emboss: [1, k]

        # Sample thumbnails plot config
        thumbnails:
            raw:
                tab:            [Overview, Thumbnails, Raw]
                filename:       thumbnails/thumbnails.{pdf,png}
                overwrite:      False
                figsize:        [9, 7.5]

                plims:          [0.25, 99.9]
                title_kws:
                    color:          w
                    size:           xx-small
                    fontweight:     bold

            calibrated:
                tab:            [Overview, Thumbnails, Calibrated]
                filename:       thumbnails/thumbnails-cal.{pdf,png}
                overwrite:      null


# ---------------------------------------------------------------------------- #
# Source Detection

detection: &source_detection
    algorithm:      sigma_threshold
    snr:            3

    npixels:        5
    edge_cutoff:    5
    edge_fraction:  0.5
    monolithic:     False
    roundness:      [0.5, 1.75]
    dilate:         2
    deblend:        True

    # How to report source detections:
    # Displaying image cutouts of the detections in terminal is done by
    # passing the ``--cutouts`` flag to pyshoc command. This is experimental.
    report:
        cutouts:
            # Control what info on the detected sources is shown with th
            title:          "Source image cutouts: {hdu.file.name:|c}"
            title_align:    <
            title_style:    [B, _]
            extend:         3
            statistics:     [com, flux, areas, roundness, q]

# aliases
# detect:          *source_detection #
# source_detection:   *source_detection #

# ---------------------------------------------------------------------------- #
# Image Registration (wcs)

registration:

    folder:         registry/
    filenames:
        registry:   registry.pkl
        params:     params.npy

    alignment:
        self:
            snr:            3

        survey:
            survey:         dss
            fov_stretch:    1.5
            fit_angle:      True

            detection:
                snr:        5


        show:       True
        tab:        [Registration, Alignment Fit]
        filename:   $REGISTRY/alignment/$HDU.aligned.png

    clusters:
        bandwidth_distance_scale:   0.3

        show:       True
        tab:        [Registration, Source IDs]
        filename:   $REGISTRY/source-ids.$TEL.{png,pdf}

        plot:
            centres:                True
            frames:                 True
            labels:                 True
            bandwidth:              True
            trim_survey_labels:     False

    mosaic:
        show:       True
        tab:        [Overview, Mosaic]
        filename:   $REGISTRY/mosaic/mosaic.$TEL.{png,pdf}

        plot:
            cmap:   cmr.chroma
            alpha:  0.35

    drizzle:
        filename:   drizzle.fits
        pixfrac:    0.5
        # kernel:   square, gaussian, point, tophat, turbo, lanczos2, lanczos3

        show:       True
        tab:        [Overview, Drizzle]
        plot:
            filename:   drizzle.{png,pdf}
            cmap:       cmr.chroma

    # lucky: todo


# alias
# reg: *image_registration

# ---------------------------------------------------------------------------- #
# Camera Tracking

tracking:
    # gui tab name
    tab:      Tracking
    # ------------------------------------------------------------------------ #
    # source tracking data files
    folder:                 $PHOT/tracking/$HDU/
    overwrite:              False
    filenames:
        measurements:       centroids.dat       # (n, nstats, nsources, 2)
        coords:             coords.dat          # (nsources, 2) structured ['xy', 'std']
        frame_info:         frame-info.dat      # (n, 2)        structured
        source_info:        source-info.dat     # (n, nsources) structured
        feature_weights:    feature-weights.dat # (nstats, 1, 1)
        source_weights:     source-weights.dat  # nsources

    # ------------------------------------------------------------------------ #
    params:
        # initialization parameters
        dilate:             0
        circularize:        True
        njobs:              1

        # when initializing the tracker, we trim the input coordinates from the
        # registry that do not have corresponding segments in the segmented
        # image
        coord_region_distance_cutoff:  1

        centroids:
            # features used for tracking
            com:            1
            peak:
                upsample:   1
                # filter: lanczos
                # note, upsampling will siginificantly affect compute times

        # subtract background from image prior to computing features
        pre_subtract:       True
        # statistic used for background
        bg:                 median
        # Required positional accuracy in pixels
        precision:          0.5
        # Per-source weights for frame offset calculation. Use "snr" for
        # signal-to-noise weighting.
        weights:            snr

        cutoffs:
            # Pixel distance to image edge
            edge:           0
            # Sources with signal-to-noise ratio less than this will not be
            # considered when solving for image dither
            snr:            3.

            # For outlier detection: maximum distance allowed for point
            # measurements from centre of distribution.
            distance:       10
            # If we know the saturation value of the CCD chip, we discard pixels
            # above this percentage of the saturation value
            saturation:     95

        compute:
            # compute interval for source centres. After `stop` only frame
            # offsets will continue being computed
            #        [start, stop, step]
            centres: [0 , 1000, 100 ]

    # ------------------------------------------------------------------------ #
    table:
        title:          Measured source coordinates
        title_style:
            fg:         [B,  _,  w]
            bg:         darkslategrey
        col_head_style:
            fg:         [B,  _,  black]
            bg:         grey
        col_head_align: ^
        precision:      3
        align:          r
        row_nrs:        True
        max_rows:       25

    # ------------------------------------------------------------------------ #
    plot:   True
    plots:
        folder:     plots/

        centroids:
            com:              [r, ., Centre of Mass]
            peak:             [b, ., Peak]
            avg:              [k, ., Weighted Centroid]
            # NOTE: avg sould be last

        labels:
            offset: [6, 6]
            color:  w
            size:   10
            # fontweight:bold

        positions:
        # -------------------------------------------------------------------- #
            filename:           positions-$SOURCE.{png,pdf}
            overwrite:          False
            figsize:            [12, 6.5]
            # dpi:                600

            legend:             False
            show:               [avg, weights, caption]  #  nulls, pixel

            density:
                cmap:           null
                tessellation:   hex
                min_count:      3

            scatter:
                marker:     x
                s:          5
                ls:         ''
                color:      null
                zorder:     1
                alpha:      0.35

            title:
                size:       13
                fontweight: bold
                pad:        10

            caption:
                pos:    [0.075, 0.01]
                text:   >-
                    $x_0 = {x:s}$
                    $y_0 = {y:s}$
                va:     bottom
                ha:     left
                bbox:       # these are matplotlib.patch.Patch properties
                    boxstyle:   round
                    facecolor:  lightgrey

            cbar:
                # shrink: 0.9
                pad:    0.01
                label0:  Counts
                label1:  Counts (Recentred)

            pixel:
                lw:         0.75
                ls:         '--'
                fc:         none
                ec:         lime
                zorder:     100

            precision:
                lw:         0.75
                ls:         '--'
                fc:         none
                ec:         darkgreen
                zorder:     100

        # -------------------------------------------------------------------- #
        time_series:
            tab:            Time Series
            filename:       displacements.{png,pdf}
            overwrite:      False
            figsize:        [12, 5]




# ---------------------------------------------------------------------------- #
# Photometry

phot:
    folder:         phot/

    apertures:
        shapes:     [contour, elliptical]
        optimize:   True


# ---------------------------------------------------------------------------- #
# Time Series Analysis

lightcurves:
    tab:            Light Curves
    header:         Light Curves
    folder:         $PHOT/lightcurves/
    formats:        [txt, npz, png, pdf]

    # time series plot parameters
    plots:
        # save
            # formats:    []
        # figure
        fig:
            size:           [14, 8]
            margins:
                top:        0.81
                bottom:     0.1
                left:       0.065
                right:      0.94


        axes:
            plims:          [-0.1, 99.99]
            labels:
                x:
                    top:        Time (UTC)
                    bottom:     Œît (s)
                    pad:        -17.5
                    ticks:
                        rotation:   45
                y:
                    left:       Relative Flux

    # Data Products by file
    # ------------------------------------------------------------------------ #
    by_file:
        folder:     by_file/$HDU

        # Raw light curve
        raw:
            filename:       $HDU.raw.$EXT
            description:    Raw contour aperture light curve for {}.

        # Flag outliers
        flagged:
            filename:       $HDU.oflag.$EXT
            description:    Outlier-flagged contour aperture light curve for {}.
            overwrite:      True

            # parameters for outlier detection
            params:
                # method:   gESD
                nwindow:    1000
                noverlap:   50%
                kmax:       0.1%

            acf:
                filename:   $HDU.oflag.acf.{npy,pdf,png}

        # Scaled by median flux of reference source
        # diff0:
        #     description:      Median scaled contour aperture light curve for {}.
        #     filename:   $HDU.diff0.$EXT

        #     plot:
        #         hist:   True

        # Differential with Total Variational (TV) smoothing
        diff:
            description:      Differential light curve (via total variational smoothing) for {}.
            filename:   $HDU.tvr.$EXT
            plot:
                hist:   True

            # Parameters for variational smoother
            params:
                nwindow:        1000
                noverlap:       10%
                smoothing:      0.1

            acf:
                filename: $HDU.tvr.acf.{npy,pdf,png}

        # decorrelate  via Maximum entropy spectrum.
        # Do by file since more likely heteroscedastic
        # decor:
        #     description:      Decorrelated light curve (via Maximum Entropy whitening) for {}.
        #     filename:   $HDU.decor.$EXT

        #     params:
        #         # method for choosing p in AR(p)
        #         method:     FPE # Akaike Final prediction Error

        #     acf:
        #         filename: $HDU.decor.acf.{npy,pdf,png}

        #     # Concatenate to produce nightly light curves
        #     concat:
        #         description:      Nightly decorrelated contour aperture light curve for {}.
        #         filename:   $LIGHTCURVES/by_date/$DATE/$DATE.decor.$EXT
        #         overwrite:  True

    # Data Products by date
    # ------------------------------------------------------------------------ #
    # by_date:
    #     folder:         by_date/$DATE
    #     formats:        [npy, pdf, png]

    #     # sde:
    #     # Spectral Analysis
    #     periodogram:
    #         title:      Periodogram
    #         filename:   $DATE.pg.$EXT

    #     lombscargle:
    #         title:      Lomb-Scargle Periodogram
    #         filename:   $DATE.ls.$EXT

    #     welch:
    #         title:      Welch Periodogram
    #         filename:   $DATE.welch.$EXT

    #     tfr:
    #         title:      Time Frequency Representation
    #         filename:   $DATE.tfr.$EXT

    # Data Products by orbital cycle (ephemeris required)
    # ------------------------------------------------------------------------ #
    # Phase folded light curves (If ephemeris available)
    # by_orbit:
    #     # ephemeris:    Eg:
    #     folder:         by_orbit/
    #     filename:       E$ORBIT.lc.$EXT

    #     stacked:
    #         title:      Orbit phased light curves for {}
    #         filename:   lcs-stacked.png

    #     phased:
    #         title:      Orbit phased light curve for {}
    #         filename:   lcs-phased.png

    #         params:
    #             bins:           360
    #             statistics:
    #                 median:     'o'
    #                 # mad:        '|'
    #                 p5, p95:    '-.'
    #                 min, max:   ':'

    # # Spectral Analysis
    # periodogram:
    #     title:      'Periodogram'
    #     filename:   E$ORBIT.pg.txt
    #     plot:       True

    # lombscargle:
    #     title:      'Lomb-Scargle Periodogram'
    #     filename:   E$ORBIT.ls.txt
    #     plot:       True

    # welch:
    #     title:      'Welch Periodogram'
    #     filename:   E$ORBIT.welch.txt
    #     plot:       True


# ---------------------------------------------------------------------------- #
sde:
    header:    Spectral Density Estimates

