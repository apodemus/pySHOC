
# ---------------------------------------------------------------------------- #
# Location of calibration database
caldb: /media/Oceanus/work/Observing/data/SHOC/calibration/

# prefer SI based naming convention for telescopes eg: "1.9m" over "74in" 
metric_names:           True
empty_filter_string:    ∅

# ---------------------------------------------------------------------------- #
remote:
    write_rsync_script: True
    server:             astro.cape.saao.ac.za
    username:           Null


# ---------------------------------------------------------------------------- #
# logging
logging:
    level: debug
    format: >-
        {elapsed:s|Bb}|
        {{{name}.{function}:s|green}:{line:d|orange}: <52}|
        {{level.name}: {message}:|{style}}
    section: |

        {0:━<{width}}
        {{level.name}: {message}:|B,teal}
        {0:━<{width}}

# ---------------------------------------------------------------------------- #
# console info styling
console:
    banner:
        show:       True
        format: |
            {{now:|B,darkgreen}: <{width:}}
            {logo}
            {{subtitle:|B,purple}: >{width}}
            {{version:|Bk}: >{width}}
        subtitle:   Photometry Pipeline
        fg:         [bold, blue]
        linestyle:  [-, bold]
        linecolor:  teal
        width:      Null

    colors:
        flat: cornflowerblue
        dark: tan
        

    cutouts: 
        title:          "Source image cutouts: {hdu.file.name:|c}"
        title_align:    <
        title_style:    [B, _]
        extend:         3
        statistics:     [com, flux, areas, roundness]

    products:
        title_style:
            bg:     darkgreen
            fg:     [lightgrey, B, _]
        header_style:
            bg:     lightgreen
            fg:     [darkslategrey, B]



# # ---------------------------------------------------------------------------- #
# caching:
#     regions:   

# ---------------------------------------------------------------------------- #
# GUI
gui: 
    title: pySHOC Photometry Pipeline GUI
    pos : N

# plotting
plotting: &plotting
    cmap:       cmr.voltage

    # samples:
    segments:
        contours: 
            cmap:   cmr.pride
            lw:     1.5

        labels:
            offset: [4, 4]
            size:   10
            color:  w
            emboss: [1, k]

    # Sample thumbnails plot config
    thumbnails:
        # name: thumbnails.png
        figsize: [9, 7.5]
        title_kws:
            color:      w
            size:       xx-small
            fontweight: bold

    mosaic:
        # name: mosaic.png
        cmap:   cmr.chroma
        alpha:  0.35

# aliases
# plots: *plotting
# plotting: *plotting


# ---------------------------------------------------------------------------- #
# Folder structure for results
folders:
    # root folder name default (if not provided by user at cli)
    output_root:    .pyshoc
    # The folder structure defined here will be created inside `output_root`
    info:           info
    logs:           info/logs
    headers:        info/headers
    plots:          plots
    sample_images:  plots/sample_images
    registry:       reg
    phot:           phot
    cache:          .cache

# Data product filenames
files: &filenames
    # campaign info
    summary:        info/campaign-files.xlsx
    products:       info/data-products.xlsx
    obslog:         info/observing-log.tex

    # remote file retrieval
    remote:         'info/remote-files.txt'
    rsync_script:   'info/rsync-remote.sh'
    
    # image registration (wcs)
    registry: &reg  reg/registry.pkl
    reg_params:     reg/params.npy
    drizzle:        reg/drizzle.fits
    reg: *reg       # alias

    # image plots
    thumbs:         plots/thumbnails.png
    thumbs_cal:     plots/thumbnails-cal.png
    mosaic:         plots/mosaic.png

# aliases
# filenames: *filenames


# ---------------------------------------------------------------------------- #
# sampled image stats
samples:
    stat:               median
    min_depth:          10          # minimun simulated integration time (seconds)
    n_intervals:        1
    subset:             Null        # eg: 1000 for sample from first 1000
    save_as:            png
    # filename_template:  {hdu.file.stem}{interval?}.{save_as}
    

# ---------------------------------------------------------------------------- #
# source detection
detection: &source_detection
    algorithm:      sigma_threshold
    npixels:        5
    edge_cutoff:    3
    edge_fraction:  0.5
    monolithic:     False
    roundness:      Null    # !!python/tuple [0.5, 1.75]
    dilate:         2
    deblend:        True
    report:
        cutouts: True

# aliases
detect:          *source_detection #
# source_find:        *source_detection #
# source_detection:   *source_detection #

# ---------------------------------------------------------------------------- #
# image registration 
registration: &image_registration
    survey:         dss
    fov_stretch:    1.65
    plot:           False
    fit_angle:      True
    # sigma_fallback: 10

drizzle: 
    pixfrac:        0.5
    cmap:           cmr.voltage

# ---------------------------------------------------------------------------- #
# source tracking 
tracking:
    # com